version: '3.8'

services:
  # MinIO Server
  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: minio
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console Web
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - spark-network
    restart: unless-stopped

  # MinIO Client para criar buckets automaticamente
  minio-client:
    image: minio/mc:latest
    container_name: minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/raw-data --ignore-existing;
      /usr/bin/mc mb myminio/processed-data --ignore-existing;
      /usr/bin/mc mb myminio/logs --ignore-existing;
      /usr/bin/mc mb myminio/spark-warehouse --ignore-existing;
      echo 'Buckets criados com sucesso!';
      "
    networks:
      - spark-network

  # Spark Master
  spark-master:
    image: bitnami/spark:3.5
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8080:8080"   # Spark Master Web UI
      - "7077:7077"   # Spark Master Port
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./spark-jobs:/opt/bitnami/spark/jobs
    networks:
      - spark-network
    restart: unless-stopped

  # Spark Worker 1
  spark-worker-1:
    image: bitnami/spark:3.5
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./spark-jobs:/opt/bitnami/spark/jobs
    networks:
      - spark-network
    depends_on:
      - spark-master
    restart: unless-stopped

  # Spark Worker 2 (opcional - para mais paralelismo)
  spark-worker-2:
    image: bitnami/spark:3.5
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./spark-jobs:/opt/bitnami/spark/jobs
    networks:
      - spark-network
    depends_on:
      - spark-master
    restart: unless-stopped

  # Jupyter Notebook com PySpark (opcional)
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter-spark
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - SPARK_MASTER=spark://spark-master:7077
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
    networks:
      - spark-network
    restart: unless-stopped

volumes:
  minio_data:
    driver: local

networks:
  spark-network:
    driver: bridge